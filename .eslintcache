[{"C:\\Users\\iesno\\Desktop\\CS-Mock-XSS-Attack\\src\\Task.js":"1","C:\\Users\\iesno\\Desktop\\CS-Mock-XSS-Attack\\src\\App.js":"2"},{"size":233,"mtime":1675123395579,"results":"3","hashOfConfig":"4"},{"size":1911,"mtime":1675124279087,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o3z33u",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\iesno\\Desktop\\CS-Mock-XSS-Attack\\src\\Task.js",[],"C:\\Users\\iesno\\Desktop\\CS-Mock-XSS-Attack\\src\\App.js",["11","12","13"],"import { useState, useEffect } from 'react'\r\nimport Task from \"./Task\"\r\n\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      text: \"go to the bank\",\r\n      image: \"https://placekitten.com/g/200/300\"\r\n    },\r\n    {\r\n      text: \"Never stop killing it\",\r\n      image: \"https://www.placecage.com/c/200/300\"\r\n    }\r\n  ]);\r\n  const [task, setTask] = useState({\r\n    text: \"\",\r\n    image: \"\"\r\n  });\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (task.text || task.image) {\r\n      tasks.push({\r\n        text: task.text,\r\n        image: task.image\r\n      })\r\n      setTask({\r\n        text:\"\",\r\n        image:\"\"\r\n      });\r\n      //evil code. Don't use the eval function, it turns the input into script\r\n      eval(task.text)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        What do you need to get done?\r\n      </label>\r\n      <br />\r\n      <textarea\r\n                        value={task.text}\r\n                        onChange={e => setTask({ ...task, text: e.target.value })}\r\n                        defaultValue=\"Add a new task!\"\r\n      />\r\n      <br />\r\n      <label>\r\n        Add an image to your task!\r\n      </label>\r\n      <br />\r\n      <input\r\n                        value={task.image}\r\n                        onChange={e => setTask({ ...task, image: e.target.value })}\r\n                        defaultValue=\"Add an image!\"\r\n      />\r\n      <br />\r\n      <input className=\"btn\" type=\"submit\" value=\"Add task\" />\r\n    </form>\r\n    <>\r\n    <h2>Tasks on your list:</h2>\r\n    \r\n      {tasks.map((task, index) => (\r\n        <Task\r\n        text={task.text}\r\n        image={task.image}\r\n        index={index}\r\n        />\r\n      ))}\r\n    </>\r\n        {/* Launch second attack here. */}\r\n        <div style={{\"visibility\":\"hidden\"}} dangerouslySetInnerHTML={{__html: task.image}} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n",{"ruleId":"14","severity":1,"message":"15","line":1,"column":20,"nodeType":"16","messageId":"17","endLine":1,"endColumn":29},{"ruleId":"14","severity":1,"message":"18","line":6,"column":17,"nodeType":"16","messageId":"17","endLine":6,"endColumn":25},{"ruleId":"19","severity":1,"message":"20","line":33,"column":7,"nodeType":"21","messageId":"22","endLine":33,"endColumn":11},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setTasks' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected"]